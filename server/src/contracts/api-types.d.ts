/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    /** Health probe */
    get: operations["getHealth"];
  };
  "/outcomes/{id}": {
    /** Get battle outcome by id */
    get: operations["getBattleOutcome"];
  };
  "/players/{playerId}/outcomes": {
    /** List recent battle outcomes for player */
    get: operations["listPlayerOutcomes"];
  };
  "/players/{playerId}/messages": {
    /** Retrieve private messages for player (inbound or outbound) */
    get: operations["listPlayerMessages"];
  };
  "/errors/catalog": {
    /** Error code seed catalog */
    get: operations["listErrorCodes"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    BattleOutcome: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      instanceId: string;
      rulesetVersion: string;
      /** Format: date-time */
      startedAt: string;
      /** Format: date-time */
      endedAt: string;
      durationMs?: number;
      participants: {
          /** Format: uuid */
          playerId: string;
          initiative: number;
          stats: {
            [key: string]: unknown;
          };
        }[];
      outcome: {
        [key: string]: unknown;
      };
    };
    PrivateMessage: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      senderId: string;
      /** Format: uuid */
      recipientId: string;
      content: string;
      /** Format: date-time */
      createdAt: string;
    };
    ErrorCode: {
      numericCode: string;
      reason: string;
      /** @enum {string} */
      category: "validation" | "conflict" | "capacity" | "rate_limit" | "state" | "security" | "internal";
      retryable: boolean;
      humanMessage: string;
    };
    Error: {
      numericCode: string;
      reason: string;
      category: string;
      retryable: boolean;
      humanMessage: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Health probe */
  getHealth: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /** @enum {string} */
            status: "ok";
          };
        };
      };
    };
  };
  /** Get battle outcome by id */
  getBattleOutcome: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Outcome found */
      200: {
        content: {
          "application/json": components["schemas"]["BattleOutcome"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** List recent battle outcomes for player */
  listPlayerOutcomes: {
    parameters: {
      query?: {
        limit?: number;
      };
      path: {
        playerId: string;
      };
    };
    responses: {
      /** @description List of outcomes */
      200: {
        content: {
          "application/json": {
            items: components["schemas"]["BattleOutcome"][];
          };
        };
      };
    };
  };
  /** Retrieve private messages for player (inbound or outbound) */
  listPlayerMessages: {
    parameters: {
      query?: {
        direction?: "inbound" | "outbound" | "both";
        since?: string;
        limit?: number;
      };
      path: {
        playerId: string;
      };
    };
    responses: {
      /** @description Messages */
      200: {
        content: {
          "application/json": {
            items: components["schemas"]["PrivateMessage"][];
          };
        };
      };
    };
  };
  /** Error code seed catalog */
  listErrorCodes: {
    responses: {
      /** @description Catalog */
      200: {
        content: {
          "application/json": {
            items: components["schemas"]["ErrorCode"][];
          };
        };
      };
    };
  };
}

// OPENAPI_CONTRACT_SIGNATURE: 75a0ec7a12a48274
